/* Code generated by Gaiman version {{VER}}
 * https://github.com/jcubic/gaiman
 */
function parse_cookies(cookies) {
    const result = {};
    cookies.split(/\s*;\s*/).forEach(function(pair) {
        pair = pair.split(/\s*=\s*/);
        var name = decodeURIComponent(pair[0]);
        var value = decodeURIComponent(pair.splice(1).join('='));
        result[name] = value;
    });
    return result;
}

function is_node() {
    return typeof process !== 'undefined' &&
        process.release.name === 'node';
}

class WebAdapter {
    constructor() {
        this._term = $('body').terminal($.noop, { greetings: false, exit: false });
    }
    ask(message) {
        return this._term.read(message);
    }
    echo(string) {
        this._term.echo(string);
    }
    get(url) {
        return fetch(url).then(res => res.text());
    }
    async post(url, data) { }
}

var cookie, argv, term;
if (is_node()) {
    argv = process.argv;
} else {
    cookie = parse_cookies(document.cookie);
    term = new WebAdapter();
}
